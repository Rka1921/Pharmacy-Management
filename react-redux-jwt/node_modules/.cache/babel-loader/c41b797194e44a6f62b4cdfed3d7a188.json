{"ast":null,"code":"var _jsxFileName = \"D:\\\\CG TRAINING 2\\\\Pharmacy Management System\\\\react-redux-jwt\\\\src\\\\store\\\\auth-context.js\";\nimport React, { useState } from \"react\";\nlet logoutTimer;\nconst AuthContext = React.createContext({\n  token: \"\",\n  isLoggedIn: false,\n  login: token => {},\n  logout: () => {}\n});\n\nconst calculationRemainingTime = expirationTime => {//  const currentTime =\n};\n\nconst retrieveStoredToken = () => {\n  const storedToken = localStorage.getItem(\"token\");\n  const storedExpirationDate = localStorage.getItem(\"expirationTime\");\n  const remainingTime = calculationRemainingTime(storedExpirationDate);\n\n  if (remainingTime <= 3600) {\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem(\"expirationTime\");\n    return null;\n  }\n\n  return storedToken;\n};\n\nexport const AuthContextProvider = props => {\n  const initialToken = localStorage.getItem(\"token\");\n  const [token, setToken] = useState(initialToken);\n  const userIsLoggedIn = !!token;\n\n  const logoutHandler = () => {\n    setToken(null);\n    localStorage.removeItem(\"token\");\n\n    if (logoutTimer) {\n      clearTimeout(logoutTimer);\n    }\n  };\n\n  const loginHandler = token => {\n    setToken(token);\n    localStorage.setItem(\"token\", token);\n    const remainingTime = 3600 * 1000;\n    logoutTimer = setTimeout(logoutHandler, remainingTime);\n  };\n\n  const contextValue = {\n    token: token,\n    isLoggedIn: userIsLoggedIn,\n    login: loginHandler,\n    logout: logoutHandler\n  };\n  return /*#__PURE__*/React.createElement(AuthContext.Provider, {\n    value: contextValue,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 5\n    }\n  }, props.children);\n};\nexport default AuthContext;","map":{"version":3,"names":["React","useState","logoutTimer","AuthContext","createContext","token","isLoggedIn","login","logout","calculationRemainingTime","expirationTime","retrieveStoredToken","storedToken","localStorage","getItem","storedExpirationDate","remainingTime","removeItem","AuthContextProvider","props","initialToken","setToken","userIsLoggedIn","logoutHandler","clearTimeout","loginHandler","setItem","setTimeout","contextValue","children"],"sources":["D:/CG TRAINING 2/Pharmacy Management System/react-redux-jwt/src/store/auth-context.js"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nlet logoutTimer;\r\n\r\nconst AuthContext = React.createContext({\r\n  token: \"\",\r\n  isLoggedIn: false,\r\n  login: (token) => {},\r\n  logout: () => {},\r\n});\r\n\r\nconst calculationRemainingTime = (expirationTime) => {\r\n  //  const currentTime =\r\n};\r\n\r\nconst retrieveStoredToken = () => {\r\n  const storedToken = localStorage.getItem(\"token\");\r\n  const storedExpirationDate = localStorage.getItem(\"expirationTime\");\r\n\r\n  const remainingTime = calculationRemainingTime(storedExpirationDate);\r\n\r\n  if (remainingTime <= 3600) {\r\n    localStorage.removeItem(\"token\");\r\n    localStorage.removeItem(\"expirationTime\");\r\n    return null;\r\n  }\r\n\r\n  return storedToken;\r\n};\r\n\r\nexport const AuthContextProvider = (props) => {\r\n  const initialToken = localStorage.getItem(\"token\");\r\n  const [token, setToken] = useState(initialToken);\r\n\r\n  const userIsLoggedIn = !!token;\r\n\r\n  const logoutHandler = () => {\r\n    setToken(null);\r\n    localStorage.removeItem(\"token\");\r\n\r\n    if (logoutTimer) {\r\n      clearTimeout(logoutTimer);\r\n    }\r\n  };\r\n\r\n  const loginHandler = (token) => {\r\n    setToken(token);\r\n    localStorage.setItem(\"token\", token);\r\n\r\n    const remainingTime = 3600 * 1000;\r\n    logoutTimer = setTimeout(logoutHandler, remainingTime);\r\n  };\r\n\r\n  const contextValue = {\r\n    token: token,\r\n    isLoggedIn: userIsLoggedIn,\r\n    login: loginHandler,\r\n    logout: logoutHandler,\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={contextValue}>\r\n      {props.children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport default AuthContext;"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,IAAIC,WAAJ;AAEA,MAAMC,WAAW,GAAGH,KAAK,CAACI,aAAN,CAAoB;EACtCC,KAAK,EAAE,EAD+B;EAEtCC,UAAU,EAAE,KAF0B;EAGtCC,KAAK,EAAGF,KAAD,IAAW,CAAE,CAHkB;EAItCG,MAAM,EAAE,MAAM,CAAE;AAJsB,CAApB,CAApB;;AAOA,MAAMC,wBAAwB,GAAIC,cAAD,IAAoB,CACnD;AACD,CAFD;;AAIA,MAAMC,mBAAmB,GAAG,MAAM;EAChC,MAAMC,WAAW,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAApB;EACA,MAAMC,oBAAoB,GAAGF,YAAY,CAACC,OAAb,CAAqB,gBAArB,CAA7B;EAEA,MAAME,aAAa,GAAGP,wBAAwB,CAACM,oBAAD,CAA9C;;EAEA,IAAIC,aAAa,IAAI,IAArB,EAA2B;IACzBH,YAAY,CAACI,UAAb,CAAwB,OAAxB;IACAJ,YAAY,CAACI,UAAb,CAAwB,gBAAxB;IACA,OAAO,IAAP;EACD;;EAED,OAAOL,WAAP;AACD,CAbD;;AAeA,OAAO,MAAMM,mBAAmB,GAAIC,KAAD,IAAW;EAC5C,MAAMC,YAAY,GAAGP,YAAY,CAACC,OAAb,CAAqB,OAArB,CAArB;EACA,MAAM,CAACT,KAAD,EAAQgB,QAAR,IAAoBpB,QAAQ,CAACmB,YAAD,CAAlC;EAEA,MAAME,cAAc,GAAG,CAAC,CAACjB,KAAzB;;EAEA,MAAMkB,aAAa,GAAG,MAAM;IAC1BF,QAAQ,CAAC,IAAD,CAAR;IACAR,YAAY,CAACI,UAAb,CAAwB,OAAxB;;IAEA,IAAIf,WAAJ,EAAiB;MACfsB,YAAY,CAACtB,WAAD,CAAZ;IACD;EACF,CAPD;;EASA,MAAMuB,YAAY,GAAIpB,KAAD,IAAW;IAC9BgB,QAAQ,CAAChB,KAAD,CAAR;IACAQ,YAAY,CAACa,OAAb,CAAqB,OAArB,EAA8BrB,KAA9B;IAEA,MAAMW,aAAa,GAAG,OAAO,IAA7B;IACAd,WAAW,GAAGyB,UAAU,CAACJ,aAAD,EAAgBP,aAAhB,CAAxB;EACD,CAND;;EAQA,MAAMY,YAAY,GAAG;IACnBvB,KAAK,EAAEA,KADY;IAEnBC,UAAU,EAAEgB,cAFO;IAGnBf,KAAK,EAAEkB,YAHY;IAInBjB,MAAM,EAAEe;EAJW,CAArB;EAOA,oBACE,oBAAC,WAAD,CAAa,QAAb;IAAsB,KAAK,EAAEK,YAA7B;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACGT,KAAK,CAACU,QADT,CADF;AAKD,CAnCM;AAqCP,eAAe1B,WAAf"},"metadata":{},"sourceType":"module"}